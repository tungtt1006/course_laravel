name: Testing Laravel with MySQL

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  phpunittest:
    runs-on: ubuntu-latest
    
    env:
      DB_DATABASE: course_laravel
      DB_USERNAME: root
      DB_PASSWORD: 12345
      DB_PORT: 3306

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: 12345
          MYSQL_DATABASE: course_laravel
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '7.4'
        
      - name: Checkout
        uses: actions/checkout@v2

      - name: Start mysql service
        run: sudo systemctl start mysql

#       - name: Get composer cache directory
#         id: composer-cache
#         run: echo "::set-output name=dir::$(composer config cache-files-dir)"

#       - name: Cache composer dependencies
#         uses: actions/cache@v2
#         with:
#           path: ${{ steps.composer-cache.outputs.dir }}
#           # Use composer.json for key, if composer.lock is not committed.
#           # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
#           key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
#           restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate

      - name: Clear Config
        run: php artisan config:clear

      - name: Run Migration
        run: php artisan migrate -v
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      - name: Test with phpunit
        run: vendor/bin/phpunit --coverage-text
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
